#!/usr/bin/python
from PIL import Image
import sys
import time
from os import path
import os
import shutil
import mimetypes
from optparse import OptionParser
from pprint import pprint
from pprint import pformat
import logging

LOGLEVEL = logging.DEBUG
logging.basicConfig(level=LOGLEVEL)
logger = logging.getLogger()

DESTINATION = "."

SUPPORTED_MIMETYPES = ("image", "video")

found = []


def walk(src):
    logger.debug("-> %s" % (src))
    for root, dirnames, filenames in os.walk(src):
        logger.debug("root=%s dirnames=%s filenames=%s" % (root, dirnames, filenames))
        for filename in filenames:
            fullname = os.path.join(root, filename)
            logger.debug("filename=%s" % (fullname))
            mimetype = mimetypes.guess_type(fullname)
            logger.debug("mimetype=%s" % (pformat(mimetype)))
            majortype = (mimetype[0].split("/"))[0]
            logger.debug("%s - %s" % (filename, majortype))
            if majortype in SUPPORTED_MIMETYPES:
                found.append(os.path.join(root, filename))


def main():
        optParser = OptionParser("usage: %prog [options] sourcedir ")
        optParser.add_option("-p", "--prefix", help="New File Prefix Date Format", action="store", type="string", dest="dateFormat", default="%Y%m%d_%H%M%S_")
        optParser.add_option("-d", "--dry", help="Only show the rename, NO MOVE WILL BE PERFORMED", action="store_true", dest='dry')
        (options, args) = optParser.parse_args(sys.argv)
        dateFormat = options.dateFormat
        dry = options.dry

        walk(args[1])
        if logger.isEnabledFor(logging.DEBUG):
            pprint(found)

        for imagePath in found:
                try:
                        img = Image.open(imagePath)
                        exif_data = img._getexif()
                        strImageDate = exif_data[306]
                        imageDate = time.strptime(strImageDate, "%Y:%m:%d %H:%M:%S")
                        newFileName = time.strftime(dateFormat, imageDate) + path.basename(imagePath)
                        newPath = path.dirname(imagePath) + os.sep + newFileName
                        if dry:
                                print (imagePath + " -> " + newPath)
                        else:
                                shutil.move(imagePath, newPath)
                except IOError:
                        print("File " + imagePath + "not found")
                except TypeError:
                        print("No EXIF date Information found for file:" + imagePath)

logging.basicConfig(level=logging.DEBUG)
if __name__ == '__main__':
        main()
